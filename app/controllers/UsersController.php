<?php

namespace Application\Controllers;

use Application\Core\User;
use Phalcon\Mvc\View;

use Application\Models\Users;

class UsersController extends ControllerBase {

	public function beforeExecuteRoute($dispatcher) {
    parent::beforeExecuteRoute($dispatcher); // TODO: Change the autogenerated stub
  }

  function indexAction() {
    $this->view->disable();

    $name = $this->request->getQuery('name', 'string');
    $page = $this->request->getQuery('page', 'int', 1);

    $null = ['conditions' => 'is_deleted IS NULL'];
    $where = ['conditions' => 'is_deleted IS NULL name LIKE :name:', 'bind' => ['name' => '%' . $name . '%']];

    $where = (empty($name)) ? $null : $where ;

    $data = Users::find($where);

    $param = ['data'  => $data, 'limit' => 2, 'page'  => $page];

    $paginator = new \Phalcon\Paginator\Adapter\Model ($param);
    $response = new \Phalcon\Http\Response();

    $datas = $paginator->getPaginate();
    $response->setJsonContent($datas);
    return $response;

  }

  function formAction(){
    $action = 'users/create/';
    $id = $this->dispatcher->getParam('id');

    $data['action'] = (empty($id)) ? $action : $action . $id ;
    $data['users'] = (empty($id)) ? [] : Users::findFirstById($id);

    $this->view->setVars($data);
  }

  function deleteAction(){
    $this->view->disable();
    $id = $this->dispatcher->getParam('id');

    echo $id;

    $users = Users::findFirstById($id)->softdelete();

    return $this->response->redirect('');
  }

  function createAction(){
    $this->view->disable();
    $id = $this->dispatcher->getParam('id');

    $users = (empty($id)) ? new Users() : Users::findFirstById($id);
    $flash = (empty($id)) ? 'saved.' : 'updated.';

    $field = ['name', 'email'];

    $success = $users->save($this->request->getPost(), $field);

    if ($success) {
      // $this->flashSession->success('The post was correctly ' . $flash);

      return $this->response->redirect('');
    } else {
      echo "Sorry, the following problems were generated: ";

      $messages = $users->getMessages();
      foreach ($messages as $message) {
        echo $message->getMessage(), "<br/>";
      }
    }

  }

}